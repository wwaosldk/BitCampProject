<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- css폴더 등록 -->
	<resources mapping="/css/**" location="/css/" />
	<!-- uploadFile/memberPhoto 폴더의 이미지 폴더로 등록 -->
	<resources mapping="/uploadFile/**" location="/uploadFile/" />



	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>




	<!-- 파일업로드 처리를 위한 multipartResolver bean 등록 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding">
			<beans:value>utf-8</beans:value>
		</beans:property>
	</beans:bean>


	<context:component-scan
		base-package="com.bitcamp.op" />


	<!-- memberDao 빈 등록 -->
	<beans:bean id="memberDao"
		class="com.bitcamp.op.member.dao.UserDAO" />

	<!-- 로그인 서비스 빈 등록 -->
	<beans:bean id="memberLoginService"
		class="com.bitcamp.op.member.service.MemberLoginService" />
	
	<!-- 회원가입 빈 등록 -->
	<beans:bean id="memberRegService"
		class="com.bitcamp.op.member.service.MemberRegService" />

	<!-- 데이터베이스 연동을 위한 DataSource 빈 등록 : JdbcTemplate에 주입, Mybatis 설정 -->
	<!-- <beans:bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<beans:property name="driverClass"
			value="oracle.jdbc.driver.OracleDriver"></beans:property> 
		<beans:property name="jdbcUrl"
			value="jdbc:oracle:thin:@localhost:1521:xe"></beans:property>
		<beans:property name="user" value="system2"></beans:property>
		<beans:property name="password" value="1234"></beans:property>
		-->
	<!-- 이건 mysql -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName"
			value="com.mysql.jdbc.Driver"></beans:property>
		<beans:property name="url"
			value="jdbc:mysql://opendbmysql.chhalcsi8vtk.ap-northeast-2.rds.amazonaws.com:3306/openproject?characterEncoding=utf8"></beans:property>
		<beans:property name="username" value="open"></beans:property>
		<beans:property name="password" value="open1234"></beans:property>
	</beans:bean>
	
	<!-- JdbcTemplate 빈 등록 : DAO에 주입 -->
	<beans:bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
	</beans:bean>

	<!-- Mybatis + Spring 연동 설정 (SqlSessionFactory 설정 ) -->
	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mapperLocations"
			value="classpath:com/bitcamp/op/mapper/mybatis/*.xml" />
	</beans:bean>
	
	<!-- SessionTemplate 클래스 등록 -->
	<beans:bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0"
			ref="sqlSessionFactory" />
	</beans:bean>

	<beans:bean id="mybatisDao"
		class="com.bitcamp.op.member.dao.MybatisMemberDao" />





	<!-- 로그인 체크를 위한 인터셉터 등록 -->
	<interceptors>
		<interceptor>
			<mapping path="/member/**" />
			<exclude-mapping path="/member/login" />
			<exclude-mapping path="/member/memberReg" />
			<beans:bean
				class="com.bitcamp.op.member.interceptor.AuthCheckInterceptor" />
		</interceptor>
	</interceptors>


</beans:beans>
